body {
  /* Resetam proprietatile default ale browserului. */
  margin: 0;

  /* Viewport = ce vede userul din site-ul nostru. 100vh = 100% din viewport.
    De ce folosim min-height? Poate la un moment dat conținutul site-ului nostru va fi suficient de mare si va avea scroll pe verticala. Asta insemna mai mult de 100vh.
    Dar, de asemenea, foarte important este ca atunci cand avem prea putin conținut, footer-ul sa fie in subsolul paginii. */
  min-height: 100vh;

  /* Body-ul este alcatuit din 3 sectiuni: header, main si footer. */
  /* display: flex permite utilizarea proprietatilor de flexbox. */
  display: flex;
  /* Afisam copiii directi (header, main si footer) pe coloana */
  flex-direction: column;
}

/* Clasa container este folosita pentru a limita dimensiunile elementelor. Unii useri pot avea ecrane ridicol de mici, altii ridicoli de mari. Este perfect ok sa limitam continutul intre doua valori. Pentru ecranele prea mici va fi scroll orizontal, iar pentru cele mari mult spatiu stanga-dreapta. */
.container {
  min-width: 300px;
  max-width: 1200px;
  /* margin: auto imparte egal spatiul ramas in stanga si-n dreapta. */
  margin: auto;
}

main {
  padding: 30px;
  
  /* flex-grow: 1 ii spune lui main: "cresti cat de mult ai loc". Daca header-ul si footer-ul nu au ocupat tot spatiul de pe verticala, mai o va face, iar astfel footer-ul va fi mereu in subsol. */
  flex-grow: 1;
}

main .container-cursuri {
  display: flex;

  /* By default, flex-wrap are valoarea nowrap, deci nu lasa elementele sa treaca pe randul urmator. Noi vrem ca in cazul in care cursurile noastre nu mai incap pe rand, sa treaca pe urmatorul, deci alegem valoare wrap. */
  flex-wrap: wrap;
}

main .container-cursuri div {
  /* Este bine ca fiecare curs sa aiba o dimensiune fixa, pentru asezarea mai buna in pagina. */
  width: 400px;

  margin-right: 40px;
  margin-bottom: 20px;

  font-size: 30px;
  font-weight: bold;

  border-bottom: solid 3px orange;
}


footer {
  color: white;
  background-color: rgb(25, 30, 48);

  padding: 30px;
}

footer .container {
  display: flex;
  /* Space around este un alt tip de aliniere pe orizontala. */
  justify-content: space-around;
}